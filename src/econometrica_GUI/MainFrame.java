/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package econometrica_GUI;

import Connections.DBManager;
import Connections.FetchData;
import Connections.JPA;
import Connections.MyOkHttp;
import Connections.MyWindowEvent;
import Connections.ReadCSVFile;
import Database.Country;
import Database.CountryData;
import Database.CountryDataset;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import static java.util.Collections.list;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author vborotis
 */
public class MainFrame extends javax.swing.JFrame {

    private MainFrame thisFrame;

    /**
     * Creates new form 
     */
    public MainFrame() {
//        ReadCSVFile read = new ReadCSVFile();
        read = new ReadCSVFile();
        read.ReadCSVFile();
//        System.out.println(read.getName().get(1));
        
        initComponents();
//    AlreadySaved
//    CountrySelect.
    this.GDP_EndDate.setEditable(false); 
    this.OIL_EndDate.setEditable(false); 
    this.GDP_StartDate.setEditable(false); 
    this.OIL_StartDate.setEditable(false); 
    this.GDP_DBName.setEditable(false); 
    this.OIL_DBName.setEditable(false); 
    this.jTableGDP.setEnabled(false); 
    this.jTableOIL.setEnabled(false); 
    this.AlreadySaved.setEnabled(false); 
    
    // Fill up Countries List    
        for (int i=1; i< read.getName().size(); i++) {
             CountrySelect.addItem((String) read.getName().get(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_header = new javax.swing.JPanel();
        SelectCountry = new javax.swing.JLabel();
        CountrySelect = new javax.swing.JComboBox<>();
        FetchData = new javax.swing.JButton();
        jPanel_footer = new javax.swing.JPanel();
        DeleteAll = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Plot = new javax.swing.JButton();
        AlreadySaved = new javax.swing.JCheckBox();
        jPanel_main = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOIL = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableGDP = new javax.swing.JTable();
        GDP_Data_lab = new javax.swing.JLabel();
        OIL_DBName_lab = new javax.swing.JLabel();
        OIL_Data_lab = new javax.swing.JLabel();
        GDP_DBName_lab = new javax.swing.JLabel();
        OIL_DBName = new javax.swing.JTextField();
        GDP_DBName = new javax.swing.JTextField();
        OIL_AvailTime_lab = new javax.swing.JLabel();
        GDP_AvailTime_lab = new javax.swing.JLabel();
        OIL_StartDt_lab = new javax.swing.JLabel();
        OIL_EndDt_lab = new javax.swing.JLabel();
        GDP_StartDt_lab = new javax.swing.JLabel();
        GDP_EndDt_lab = new javax.swing.JLabel();
        OIL_StartDate = new javax.swing.JTextField();
        OIL_EndDate = new javax.swing.JTextField();
        GDP_StartDate = new javax.swing.JTextField();
        GDP_EndDate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("MainForm"); // NOI18N

        SelectCountry.setText("Select Country:");

        CountrySelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountrySelectActionPerformed(evt);
            }
        });

        FetchData.setText("Fetch Data");
        FetchData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FetchDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_headerLayout = new javax.swing.GroupLayout(jPanel_header);
        jPanel_header.setLayout(jPanel_headerLayout);
        jPanel_headerLayout.setHorizontalGroup(
            jPanel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_headerLayout.createSequentialGroup()
                        .addComponent(CountrySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FetchData, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SelectCountry))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_headerLayout.setVerticalGroup(
            jPanel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SelectCountry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CountrySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FetchData, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(432, 432, 432))
        );

        DeleteAll.setText("Delete ALL");
        DeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAllActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Plot.setText("Plot");
        Plot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlotActionPerformed(evt);
            }
        });

        AlreadySaved.setText("Already Saved to Database");
        AlreadySaved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlreadySavedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_footerLayout = new javax.swing.GroupLayout(jPanel_footer);
        jPanel_footer.setLayout(jPanel_footerLayout);
        jPanel_footerLayout.setHorizontalGroup(
            jPanel_footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_footerLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Plot, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteAll)
                .addGap(34, 34, 34)
                .addComponent(AlreadySaved, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel_footerLayout.setVerticalGroup(
            jPanel_footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_footerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Plot)
                    .addComponent(DeleteAll)
                    .addComponent(AlreadySaved)
                    .addComponent(Save))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTableOIL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Year", "Value"
            }
        ));
        jScrollPane1.setViewportView(jTableOIL);

        jTableGDP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Year", "Value"
            }
        ));
        jScrollPane4.setViewportView(jTableGDP);
        if (jTableGDP.getColumnModel().getColumnCount() > 0) {
            jTableGDP.getColumnModel().getColumn(0).setHeaderValue("Year");
            jTableGDP.getColumnModel().getColumn(1).setHeaderValue("Value");
        }

        GDP_Data_lab.setText("GDP DATA");

        OIL_DBName_lab.setText("Dataset Name:");

        OIL_Data_lab.setText("OIL DATA");

        GDP_DBName_lab.setText("Dataset Name:");

        OIL_DBName.setText(" ");

        GDP_DBName.setText(" ");
        GDP_DBName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GDP_DBNameActionPerformed(evt);
            }
        });

        OIL_AvailTime_lab.setText("Available Timespan:");

        GDP_AvailTime_lab.setText("Available Timespan:");

        OIL_StartDt_lab.setText("Start Date:");

        OIL_EndDt_lab.setText("End Date:");

        GDP_StartDt_lab.setText("Start Date:");

        GDP_EndDt_lab.setText("End Date:");

        OIL_StartDate.setText(" ");

        OIL_EndDate.setText(" ");

        GDP_StartDate.setText(" ");

        GDP_EndDate.setText(" ");

        javax.swing.GroupLayout jPanel_mainLayout = new javax.swing.GroupLayout(jPanel_main);
        jPanel_main.setLayout(jPanel_mainLayout);
        jPanel_mainLayout.setHorizontalGroup(
            jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_mainLayout.createSequentialGroup()
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OIL_DBName, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OIL_AvailTime_lab)
                    .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(OIL_Data_lab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(OIL_DBName_lab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_mainLayout.createSequentialGroup()
                            .addComponent(OIL_EndDt_lab)
                            .addGap(24, 24, 24)
                            .addComponent(OIL_EndDate, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_mainLayout.createSequentialGroup()
                            .addComponent(OIL_StartDt_lab)
                            .addGap(18, 18, 18)
                            .addComponent(OIL_StartDate))))
                .addGap(18, 18, 18)
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_mainLayout.createSequentialGroup()
                        .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_mainLayout.createSequentialGroup()
                                .addComponent(GDP_StartDt_lab)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel_mainLayout.createSequentialGroup()
                                .addComponent(GDP_EndDt_lab)
                                .addGap(24, 24, 24)))
                        .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GDP_EndDate, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(GDP_StartDate)))
                    .addComponent(GDP_AvailTime_lab)
                    .addComponent(GDP_DBName, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GDP_DBName_lab)
                    .addComponent(GDP_Data_lab)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_mainLayout.setVerticalGroup(
            jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_mainLayout.createSequentialGroup()
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OIL_Data_lab)
                    .addComponent(GDP_Data_lab))
                .addGap(9, 9, 9)
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GDP_DBName_lab, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(OIL_DBName_lab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OIL_DBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GDP_DBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OIL_AvailTime_lab)
                    .addComponent(GDP_AvailTime_lab))
                .addGap(18, 18, 18)
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OIL_StartDt_lab)
                    .addComponent(GDP_StartDt_lab)
                    .addComponent(OIL_StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GDP_StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OIL_EndDt_lab)
                    .addComponent(OIL_EndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GDP_EndDt_lab)
                    .addComponent(GDP_EndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel_header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel_footer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel_main, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 12, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_header, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_main, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel_footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("MainForm");
        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FetchDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FetchDataActionPerformed
        // TODO add your handling code here:
        // Αν υπάρχει εγγραφή στην βάση τότε ενημερώνεται η φόρμα από την εγγραφή
        // της βάσης στα κατάλληλα πεδία, διαφορετικά γίνεται ανάκληση του http 
        // για λήψη δεδομένων.
        
        EntityManager em = DBManager.getEm(); // Δημιουργία Entity Manager
        MyOkHttp http = new MyOkHttp();       // Δημιουργία σύνδεσης με portal
        FetchData fd = new FetchData();       // Δημιουργία FetchData structure
        DefaultTableModel modelGDP = (DefaultTableModel) jTableGDP.getModel(); // Δημιουργία διαχειριστή
        DefaultTableModel modelOIL = (DefaultTableModel) jTableOIL.getModel(); // ALV layout
        // Initiation of display data fields
        this.GDP_EndDate.setText("");
        this.OIL_EndDate.setText("");
        this.GDP_StartDate.setText("");
        this.OIL_StartDate.setText("");
        this.GDP_DBName.setText("");
        this.OIL_DBName.setText("");
        // Initialization of model structures for ALV lists management
        modelGDP.setNumRows(0);
        modelOIL.setNumRows(0);

        //Ξεκινάμε να αναζητούμε στην βάση αν υπάρχει η χώρα.
        //Αν δεν υπάρχει τότε καλεί το MyOkHttp και κάνει retrieve τα data
//         System.out.println("Country Select = " + (String) CountrySelect.getSelectedItem());
         country = new Country();                  // Δημιουργία entity country
         countryDatasetGDP = new CountryDataset(); // Δημιουργία entity countryDataset
         countryDatasetOIL = new CountryDataset(); // Δημιουργία entity countryDataset
         countryDataGDPst = new ArrayList(); // Δημιουργία λίστας entity countryData
         countryDataOILst = new ArrayList(); // Δημιουργία λίστας entity countryData
         countryData = new CountryData();    // Δημιουργία entity countryData
         
         if (JPA.retreiveCountry((String) CountrySelect.getSelectedItem()) != null) {
             // The country already exist into the DataBase
             // So we retrieve data from DataBase
             country = JPA.retreiveCountry((String) CountrySelect.getSelectedItem()); // Ανάκτηση country από την βάση
             // Εκκρεμεί ανάκτηση δεδομένων από countryDataset & countryData
         } else {
//             System.out.println("Country ISO Code = " + 
//                             JPA.retreiveCountry((String) CountrySelect.getSelectedItem()));

//             System.out.println("Selected Alpha3 Code = " + read.getAlpha3Code(CountrySelect.getSelectedIndex()+1));
             // Set Object Country with values from the drop down lists and CSV file
             country.setName((String) CountrySelect.getSelectedItem());
             country.setIsoCode(read.getAlpha3Code(CountrySelect.getSelectedIndex()+1));
             
             try { 
                GDP = fd.FetchData(http.MyOkHttp(read.getAlpha3Code(CountrySelect.getSelectedIndex()+1),"GDP"), "GDP");
                // Ενημέρωση πεδίων Set Description, StartDate, EndDate στην MainForm
                GDP_DBName.setText(GDP.getDataset().getName()); 
                GDP_StartDate.setText(GDP.getDataset().getStart_date());
                GDP_EndDate.setText(GDP.getDataset().getEnd_date());
                
                // Ενημέρωση του countryDataset με δεδομένα από το portal
                countryDatasetGDP.setCountryCode(country);
                countryDatasetGDP.setDescription(GDP.getDataset().getDescription());
                countryDatasetGDP.setName(GDP.getDataset().getName());
                countryDatasetGDP.setStartYear(((String)GDP.getDataset().getStart_date()).substring(0, 4));
                countryDatasetGDP.setEndYear(((String)GDP.getDataset().getEnd_date()).substring(0, 4));
//                System.out.println("Country Dataset GDP = " + 
//                                    read.getNumber().get(CountrySelect.getSelectedIndex()+1));
//                countryDatasetGDP.setDatasetId(Integer.parseInt(read.getNumber().get(CountrySelect.getSelectedIndex()+1).toString()));
//                countryDatasetGDP.setDatasetId(GDP.getDataset().getId());
//                System.out.println("Dataset ID = " + Integer.parseInt(read.getNumber().get(CountrySelect.getSelectedIndex()+1).toString()) );
                // Set the number of the rows to table size
                if (GDP.getDataset().getHm1().size()>0) {
                    modelGDP.setNumRows(GDP.getDataset().getHm1().size()); 
                }
               for (int i=0; i< GDP.getDataset().getHm1().size();i++) {
                     jTableGDP.setValueAt(((String)GDP.getDataset().getHm1().get(i)).substring(0, 4), i, 0);
                     countryData.setDataYear(((String) GDP.getDataset().getHm1().get(i)).substring(0, 4));
                     jTableGDP.setValueAt(GDP.getDataset().getHm2().get(i), i, 1);
                     countryData.setValue(""+GDP.getDataset().getHm2().get(i));
                     countryData.setDataset(countryDatasetGDP);
                     countryDataGDPst.add(countryData);
                };
                
            } catch (ParseException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
             
            try {
                OIL = fd.FetchData(http.MyOkHttp(read.getAlpha3Code(CountrySelect.getSelectedIndex()+1),"OIL"), "OIL");
              
                OIL_DBName.setText(OIL.getDataset().getName());
                OIL_StartDate.setText(OIL.getDataset().getStart_date());
                OIL_EndDate.setText(OIL.getDataset().getEnd_date());

                // Ενημέρωση του countryDataset με δεδομένα από το portal
                countryDatasetOIL.setCountryCode(country);
                countryDatasetOIL.setDescription(OIL.getDataset().getDescription());
                countryDatasetOIL.setName(OIL.getDataset().getName());
                countryDatasetOIL.setStartYear(((String)OIL.getDataset().getStart_date()).substring(0, 4));
                countryDatasetOIL.setEndYear(((String)OIL.getDataset().getEnd_date()).substring(0, 4));                
                // Set the number of the rows to table size
               if (OIL.getDataset().getHm1().size()>0) { 
                   modelOIL.setNumRows(OIL.getDataset().getHm1().size());
               }
               for (int i=0; i< OIL.getDataset().getHm1().size();i++) {
                     jTableOIL.setValueAt(((String)OIL.getDataset().getHm1().get(i)).substring(0, 4), i, 0);
                     countryData.setDataYear(((String)OIL.getDataset().getHm1().get(i)).substring(0, 4));
                     jTableOIL.setValueAt(OIL.getDataset().getHm2().get(i), i, 1);
                     countryData.setValue(""+OIL.getDataset().getHm2().get(i));
                     countryData.setDataset(countryDatasetOIL);
                     countryDataOILst.add(countryData);
                };
                
            } catch (ParseException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                this.revalidate();
         }
    }//GEN-LAST:event_FetchDataActionPerformed
    
    private void GDP_DBNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GDP_DBNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GDP_DBNameActionPerformed

    private void AlreadySavedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlreadySavedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AlreadySavedActionPerformed

    private void CountrySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountrySelectActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_CountrySelectActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
//        System.out.println("SaveActionButton with ISO Code = " + country.getIsoCode());
//        System.out.println("SaveActionButton with Country Name = " + country.getName());
        JPA.createCountry(country);
//        System.out.println("SaveActionButton with Country Code = " + countryDatasetGDP.getCountryCode().getIsoCode());
//        System.out.println("SaveActionButton with Description = " + countryDatasetGDP.getDescription());
//        System.out.println("SaveActionButton with start Year = " + (countryDatasetGDP.getStartYear()));
//        System.out.println("SaveActionButton with end Year = " + (countryDatasetGDP.getEndYear()));
//        System.out.println("SaveActionButton with Dataset ID = " + (countryDatasetGDP.getDatasetId()));
        JPA.createCountryDataset(countryDatasetGDP);
        JPA.createCountryDataset(countryDatasetOIL);
    }//GEN-LAST:event_SaveActionPerformed

    private void PlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlotActionPerformed
        String plotcountry = (String) CountrySelect.getSelectedItem();
        PlotPanel plot = null;
        try {
            plot = new PlotPanel(plotcountry);
        } catch (ParseException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        plot.setVisible(true);
        RefineryUtilities.centerFrameOnScreen(plot);
        plot.pack();
        plot.setDefaultCloseOperation(MainFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_PlotActionPerformed

    private void DeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAllActionPerformed
        // TODO add your handling code here:
     
       
        int verify = JOptionPane.showConfirmDialog(rootPane, "Είσαι βέβαιος για τη διαγραφή;");
        if(verify == JOptionPane.NO_OPTION)
            System.exit(0);
        if (verify == JOptionPane.YES_OPTION) {
            DefaultTableModel modelGDP = (DefaultTableModel) jTableGDP.getModel(); // Δημιουργία διαχειριστή
            DefaultTableModel modelOIL = (DefaultTableModel) jTableOIL.getModel(); // ALV layout
            // Initiation of display data fields
            this.GDP_EndDate.setText("");
            this.OIL_EndDate.setText("");
            this.GDP_StartDate.setText("");
            this.OIL_StartDate.setText("");
            this.GDP_DBName.setText("");
            this.OIL_DBName.setText("");
            // Initialization of model structures for ALV lists management
            modelGDP.setNumRows(0);
            modelOIL.setNumRows(0);
            JPA.DeleteAll();
            
        }
    }//GEN-LAST:event_DeleteAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AlreadySaved;
    private javax.swing.JComboBox<String> CountrySelect;
    private javax.swing.JButton DeleteAll;
    private javax.swing.JButton FetchData;
    private javax.swing.JLabel GDP_AvailTime_lab;
    private javax.swing.JTextField GDP_DBName;
    private javax.swing.JLabel GDP_DBName_lab;
    private javax.swing.JLabel GDP_Data_lab;
    private javax.swing.JTextField GDP_EndDate;
    private javax.swing.JLabel GDP_EndDt_lab;
    private javax.swing.JTextField GDP_StartDate;
    private javax.swing.JLabel GDP_StartDt_lab;
    private javax.swing.JLabel OIL_AvailTime_lab;
    private javax.swing.JTextField OIL_DBName;
    private javax.swing.JLabel OIL_DBName_lab;
    private javax.swing.JLabel OIL_Data_lab;
    private javax.swing.JTextField OIL_EndDate;
    private javax.swing.JLabel OIL_EndDt_lab;
    private javax.swing.JTextField OIL_StartDate;
    private javax.swing.JLabel OIL_StartDt_lab;
    private javax.swing.JButton Plot;
    private javax.swing.JButton Save;
    private javax.swing.JLabel SelectCountry;
    private javax.swing.JPanel jPanel_footer;
    private javax.swing.JPanel jPanel_header;
    private javax.swing.JPanel jPanel_main;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableGDP;
    private javax.swing.JTable jTableOIL;
    // End of variables declaration//GEN-END:variables
    private FetchData OIL;
    private FetchData GDP;
    private Country country;
    private ArrayList<CountryData> countryDataGDPst;
    private ArrayList<CountryData> countryDataOILst;
    private CountryData countryData;
    private CountryDataset countryDatasetGDP;
    private CountryDataset countryDatasetOIL;
    private EntityManager em;
    private ReadCSVFile read;
}
